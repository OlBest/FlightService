//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18063
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18063.
// 
#pragma warning disable 1591

namespace FlightServer.localhost {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="FlightsServiceSoap", Namespace="http://flights.com/")]
    public partial class FlightsService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback BuyTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllFlightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightPriceIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateFlightPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightsPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddFlightPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CancelTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateTicketOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteFlightPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArrivalCitiesByDepartureOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomersOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCustomerFlightsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightsCitiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFlightPriceOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public FlightsService() {
            this.Url = global::FlightServer.Properties.Settings.Default.FlightServer_localhost_FlightsService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event BuyTicketCompletedEventHandler BuyTicketCompleted;
        
        /// <remarks/>
        public event GetAllFlightsCompletedEventHandler GetAllFlightsCompleted;
        
        /// <remarks/>
        public event GetFlightPriceIdCompletedEventHandler GetFlightPriceIdCompleted;
        
        /// <remarks/>
        public event UpdateFlightPriceCompletedEventHandler UpdateFlightPriceCompleted;
        
        /// <remarks/>
        public event GetFlightsPriceCompletedEventHandler GetFlightsPriceCompleted;
        
        /// <remarks/>
        public event AddFlightPriceCompletedEventHandler AddFlightPriceCompleted;
        
        /// <remarks/>
        public event CancelTicketCompletedEventHandler CancelTicketCompleted;
        
        /// <remarks/>
        public event UpdateTicketCompletedEventHandler UpdateTicketCompleted;
        
        /// <remarks/>
        public event DeleteFlightPriceCompletedEventHandler DeleteFlightPriceCompleted;
        
        /// <remarks/>
        public event GetArrivalCitiesByDepartureCompletedEventHandler GetArrivalCitiesByDepartureCompleted;
        
        /// <remarks/>
        public event AddCityCompletedEventHandler AddCityCompleted;
        
        /// <remarks/>
        public event DeleteCityCompletedEventHandler DeleteCityCompleted;
        
        /// <remarks/>
        public event AddCustomerCompletedEventHandler AddCustomerCompleted;
        
        /// <remarks/>
        public event GetCustomersCompletedEventHandler GetCustomersCompleted;
        
        /// <remarks/>
        public event GetCustomerFlightsCompletedEventHandler GetCustomerFlightsCompleted;
        
        /// <remarks/>
        public event UpdateCustomerCompletedEventHandler UpdateCustomerCompleted;
        
        /// <remarks/>
        public event GetFlightsCitiesCompletedEventHandler GetFlightsCitiesCompleted;
        
        /// <remarks/>
        public event GetFlightPriceCompletedEventHandler GetFlightPriceCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/BuyTicket", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void BuyTicket(string departure, string arrival, string name, string surname) {
            this.Invoke("BuyTicket", new object[] {
                        departure,
                        arrival,
                        name,
                        surname});
        }
        
        /// <remarks/>
        public void BuyTicketAsync(string departure, string arrival, string name, string surname) {
            this.BuyTicketAsync(departure, arrival, name, surname, null);
        }
        
        /// <remarks/>
        public void BuyTicketAsync(string departure, string arrival, string name, string surname, object userState) {
            if ((this.BuyTicketOperationCompleted == null)) {
                this.BuyTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBuyTicketOperationCompleted);
            }
            this.InvokeAsync("BuyTicket", new object[] {
                        departure,
                        arrival,
                        name,
                        surname}, this.BuyTicketOperationCompleted, userState);
        }
        
        private void OnBuyTicketOperationCompleted(object arg) {
            if ((this.BuyTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BuyTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetAllFlights", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetAllFlights() {
            object[] results = this.Invoke("GetAllFlights", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllFlightsAsync() {
            this.GetAllFlightsAsync(null);
        }
        
        /// <remarks/>
        public void GetAllFlightsAsync(object userState) {
            if ((this.GetAllFlightsOperationCompleted == null)) {
                this.GetAllFlightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllFlightsOperationCompleted);
            }
            this.InvokeAsync("GetAllFlights", new object[0], this.GetAllFlightsOperationCompleted, userState);
        }
        
        private void OnGetAllFlightsOperationCompleted(object arg) {
            if ((this.GetAllFlightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllFlightsCompleted(this, new GetAllFlightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetFlightPriceId", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFlightPriceId(string departure, string arrival) {
            object[] results = this.Invoke("GetFlightPriceId", new object[] {
                        departure,
                        arrival});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightPriceIdAsync(string departure, string arrival) {
            this.GetFlightPriceIdAsync(departure, arrival, null);
        }
        
        /// <remarks/>
        public void GetFlightPriceIdAsync(string departure, string arrival, object userState) {
            if ((this.GetFlightPriceIdOperationCompleted == null)) {
                this.GetFlightPriceIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightPriceIdOperationCompleted);
            }
            this.InvokeAsync("GetFlightPriceId", new object[] {
                        departure,
                        arrival}, this.GetFlightPriceIdOperationCompleted, userState);
        }
        
        private void OnGetFlightPriceIdOperationCompleted(object arg) {
            if ((this.GetFlightPriceIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightPriceIdCompleted(this, new GetFlightPriceIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/UpdateFlightPrice", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateFlightPrice(int flightPriceId, string departure, string arrival, int price) {
            this.Invoke("UpdateFlightPrice", new object[] {
                        flightPriceId,
                        departure,
                        arrival,
                        price});
        }
        
        /// <remarks/>
        public void UpdateFlightPriceAsync(int flightPriceId, string departure, string arrival, int price) {
            this.UpdateFlightPriceAsync(flightPriceId, departure, arrival, price, null);
        }
        
        /// <remarks/>
        public void UpdateFlightPriceAsync(int flightPriceId, string departure, string arrival, int price, object userState) {
            if ((this.UpdateFlightPriceOperationCompleted == null)) {
                this.UpdateFlightPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateFlightPriceOperationCompleted);
            }
            this.InvokeAsync("UpdateFlightPrice", new object[] {
                        flightPriceId,
                        departure,
                        arrival,
                        price}, this.UpdateFlightPriceOperationCompleted, userState);
        }
        
        private void OnUpdateFlightPriceOperationCompleted(object arg) {
            if ((this.UpdateFlightPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateFlightPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetFlightsPrice", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFlightsPrice() {
            object[] results = this.Invoke("GetFlightsPrice", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightsPriceAsync() {
            this.GetFlightsPriceAsync(null);
        }
        
        /// <remarks/>
        public void GetFlightsPriceAsync(object userState) {
            if ((this.GetFlightsPriceOperationCompleted == null)) {
                this.GetFlightsPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightsPriceOperationCompleted);
            }
            this.InvokeAsync("GetFlightsPrice", new object[0], this.GetFlightsPriceOperationCompleted, userState);
        }
        
        private void OnGetFlightsPriceOperationCompleted(object arg) {
            if ((this.GetFlightsPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightsPriceCompleted(this, new GetFlightsPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/AddFlightPrice", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddFlightPrice(string departure, string arrival, int price) {
            this.Invoke("AddFlightPrice", new object[] {
                        departure,
                        arrival,
                        price});
        }
        
        /// <remarks/>
        public void AddFlightPriceAsync(string departure, string arrival, int price) {
            this.AddFlightPriceAsync(departure, arrival, price, null);
        }
        
        /// <remarks/>
        public void AddFlightPriceAsync(string departure, string arrival, int price, object userState) {
            if ((this.AddFlightPriceOperationCompleted == null)) {
                this.AddFlightPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddFlightPriceOperationCompleted);
            }
            this.InvokeAsync("AddFlightPrice", new object[] {
                        departure,
                        arrival,
                        price}, this.AddFlightPriceOperationCompleted, userState);
        }
        
        private void OnAddFlightPriceOperationCompleted(object arg) {
            if ((this.AddFlightPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddFlightPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/CancelTicket", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void CancelTicket(int flightId) {
            this.Invoke("CancelTicket", new object[] {
                        flightId});
        }
        
        /// <remarks/>
        public void CancelTicketAsync(int flightId) {
            this.CancelTicketAsync(flightId, null);
        }
        
        /// <remarks/>
        public void CancelTicketAsync(int flightId, object userState) {
            if ((this.CancelTicketOperationCompleted == null)) {
                this.CancelTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCancelTicketOperationCompleted);
            }
            this.InvokeAsync("CancelTicket", new object[] {
                        flightId}, this.CancelTicketOperationCompleted, userState);
        }
        
        private void OnCancelTicketOperationCompleted(object arg) {
            if ((this.CancelTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CancelTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/UpdateTicket", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateTicket(int flightId, int flightPriceId, string name, string surname) {
            this.Invoke("UpdateTicket", new object[] {
                        flightId,
                        flightPriceId,
                        name,
                        surname});
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(int flightId, int flightPriceId, string name, string surname) {
            this.UpdateTicketAsync(flightId, flightPriceId, name, surname, null);
        }
        
        /// <remarks/>
        public void UpdateTicketAsync(int flightId, int flightPriceId, string name, string surname, object userState) {
            if ((this.UpdateTicketOperationCompleted == null)) {
                this.UpdateTicketOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateTicketOperationCompleted);
            }
            this.InvokeAsync("UpdateTicket", new object[] {
                        flightId,
                        flightPriceId,
                        name,
                        surname}, this.UpdateTicketOperationCompleted, userState);
        }
        
        private void OnUpdateTicketOperationCompleted(object arg) {
            if ((this.UpdateTicketCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateTicketCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/DeleteFlightPrice", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteFlightPrice(string departure, string arrival) {
            this.Invoke("DeleteFlightPrice", new object[] {
                        departure,
                        arrival});
        }
        
        /// <remarks/>
        public void DeleteFlightPriceAsync(string departure, string arrival) {
            this.DeleteFlightPriceAsync(departure, arrival, null);
        }
        
        /// <remarks/>
        public void DeleteFlightPriceAsync(string departure, string arrival, object userState) {
            if ((this.DeleteFlightPriceOperationCompleted == null)) {
                this.DeleteFlightPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteFlightPriceOperationCompleted);
            }
            this.InvokeAsync("DeleteFlightPrice", new object[] {
                        departure,
                        arrival}, this.DeleteFlightPriceOperationCompleted, userState);
        }
        
        private void OnDeleteFlightPriceOperationCompleted(object arg) {
            if ((this.DeleteFlightPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteFlightPriceCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetArrivalCitiesByDeparture", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetArrivalCitiesByDeparture(string departure) {
            object[] results = this.Invoke("GetArrivalCitiesByDeparture", new object[] {
                        departure});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetArrivalCitiesByDepartureAsync(string departure) {
            this.GetArrivalCitiesByDepartureAsync(departure, null);
        }
        
        /// <remarks/>
        public void GetArrivalCitiesByDepartureAsync(string departure, object userState) {
            if ((this.GetArrivalCitiesByDepartureOperationCompleted == null)) {
                this.GetArrivalCitiesByDepartureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArrivalCitiesByDepartureOperationCompleted);
            }
            this.InvokeAsync("GetArrivalCitiesByDeparture", new object[] {
                        departure}, this.GetArrivalCitiesByDepartureOperationCompleted, userState);
        }
        
        private void OnGetArrivalCitiesByDepartureOperationCompleted(object arg) {
            if ((this.GetArrivalCitiesByDepartureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArrivalCitiesByDepartureCompleted(this, new GetArrivalCitiesByDepartureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/AddCity", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCity(string city) {
            this.Invoke("AddCity", new object[] {
                        city});
        }
        
        /// <remarks/>
        public void AddCityAsync(string city) {
            this.AddCityAsync(city, null);
        }
        
        /// <remarks/>
        public void AddCityAsync(string city, object userState) {
            if ((this.AddCityOperationCompleted == null)) {
                this.AddCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCityOperationCompleted);
            }
            this.InvokeAsync("AddCity", new object[] {
                        city}, this.AddCityOperationCompleted, userState);
        }
        
        private void OnAddCityOperationCompleted(object arg) {
            if ((this.AddCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/DeleteCity", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteCity(string city) {
            this.Invoke("DeleteCity", new object[] {
                        city});
        }
        
        /// <remarks/>
        public void DeleteCityAsync(string city) {
            this.DeleteCityAsync(city, null);
        }
        
        /// <remarks/>
        public void DeleteCityAsync(string city, object userState) {
            if ((this.DeleteCityOperationCompleted == null)) {
                this.DeleteCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteCityOperationCompleted);
            }
            this.InvokeAsync("DeleteCity", new object[] {
                        city}, this.DeleteCityOperationCompleted, userState);
        }
        
        private void OnDeleteCityOperationCompleted(object arg) {
            if ((this.DeleteCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteCityCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/AddCustomer", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddCustomer(string name, string surname) {
            this.Invoke("AddCustomer", new object[] {
                        name,
                        surname});
        }
        
        /// <remarks/>
        public void AddCustomerAsync(string name, string surname) {
            this.AddCustomerAsync(name, surname, null);
        }
        
        /// <remarks/>
        public void AddCustomerAsync(string name, string surname, object userState) {
            if ((this.AddCustomerOperationCompleted == null)) {
                this.AddCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddCustomerOperationCompleted);
            }
            this.InvokeAsync("AddCustomer", new object[] {
                        name,
                        surname}, this.AddCustomerOperationCompleted, userState);
        }
        
        private void OnAddCustomerOperationCompleted(object arg) {
            if ((this.AddCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetCustomers", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomers() {
            object[] results = this.Invoke("GetCustomers", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomersAsync() {
            this.GetCustomersAsync(null);
        }
        
        /// <remarks/>
        public void GetCustomersAsync(object userState) {
            if ((this.GetCustomersOperationCompleted == null)) {
                this.GetCustomersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomersOperationCompleted);
            }
            this.InvokeAsync("GetCustomers", new object[0], this.GetCustomersOperationCompleted, userState);
        }
        
        private void OnGetCustomersOperationCompleted(object arg) {
            if ((this.GetCustomersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomersCompleted(this, new GetCustomersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetCustomerFlights", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetCustomerFlights(string name, string surname) {
            object[] results = this.Invoke("GetCustomerFlights", new object[] {
                        name,
                        surname});
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetCustomerFlightsAsync(string name, string surname) {
            this.GetCustomerFlightsAsync(name, surname, null);
        }
        
        /// <remarks/>
        public void GetCustomerFlightsAsync(string name, string surname, object userState) {
            if ((this.GetCustomerFlightsOperationCompleted == null)) {
                this.GetCustomerFlightsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCustomerFlightsOperationCompleted);
            }
            this.InvokeAsync("GetCustomerFlights", new object[] {
                        name,
                        surname}, this.GetCustomerFlightsOperationCompleted, userState);
        }
        
        private void OnGetCustomerFlightsOperationCompleted(object arg) {
            if ((this.GetCustomerFlightsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCustomerFlightsCompleted(this, new GetCustomerFlightsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/UpdateCustomer", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateCustomer(string newName, string newSurname, string oldName, string oldSurname) {
            this.Invoke("UpdateCustomer", new object[] {
                        newName,
                        newSurname,
                        oldName,
                        oldSurname});
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string newName, string newSurname, string oldName, string oldSurname) {
            this.UpdateCustomerAsync(newName, newSurname, oldName, oldSurname, null);
        }
        
        /// <remarks/>
        public void UpdateCustomerAsync(string newName, string newSurname, string oldName, string oldSurname, object userState) {
            if ((this.UpdateCustomerOperationCompleted == null)) {
                this.UpdateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateCustomerOperationCompleted);
            }
            this.InvokeAsync("UpdateCustomer", new object[] {
                        newName,
                        newSurname,
                        oldName,
                        oldSurname}, this.UpdateCustomerOperationCompleted, userState);
        }
        
        private void OnUpdateCustomerOperationCompleted(object arg) {
            if ((this.UpdateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateCustomerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetFlightsCities", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataTable GetFlightsCities() {
            object[] results = this.Invoke("GetFlightsCities", new object[0]);
            return ((System.Data.DataTable)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightsCitiesAsync() {
            this.GetFlightsCitiesAsync(null);
        }
        
        /// <remarks/>
        public void GetFlightsCitiesAsync(object userState) {
            if ((this.GetFlightsCitiesOperationCompleted == null)) {
                this.GetFlightsCitiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightsCitiesOperationCompleted);
            }
            this.InvokeAsync("GetFlightsCities", new object[0], this.GetFlightsCitiesOperationCompleted, userState);
        }
        
        private void OnGetFlightsCitiesOperationCompleted(object arg) {
            if ((this.GetFlightsCitiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightsCitiesCompleted(this, new GetFlightsCitiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://flights.com/GetFlightPrice", RequestNamespace="http://flights.com/", ResponseNamespace="http://flights.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetFlightPrice(string departure, string arrival) {
            object[] results = this.Invoke("GetFlightPrice", new object[] {
                        departure,
                        arrival});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetFlightPriceAsync(string departure, string arrival) {
            this.GetFlightPriceAsync(departure, arrival, null);
        }
        
        /// <remarks/>
        public void GetFlightPriceAsync(string departure, string arrival, object userState) {
            if ((this.GetFlightPriceOperationCompleted == null)) {
                this.GetFlightPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFlightPriceOperationCompleted);
            }
            this.InvokeAsync("GetFlightPrice", new object[] {
                        departure,
                        arrival}, this.GetFlightPriceOperationCompleted, userState);
        }
        
        private void OnGetFlightPriceOperationCompleted(object arg) {
            if ((this.GetFlightPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFlightPriceCompleted(this, new GetFlightPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void BuyTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetAllFlightsCompletedEventHandler(object sender, GetAllFlightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllFlightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllFlightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFlightPriceIdCompletedEventHandler(object sender, GetFlightPriceIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightPriceIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightPriceIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateFlightPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFlightsPriceCompletedEventHandler(object sender, GetFlightsPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightsPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightsPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddFlightPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void CancelTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateTicketCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteFlightPriceCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetArrivalCitiesByDepartureCompletedEventHandler(object sender, GetArrivalCitiesByDepartureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArrivalCitiesByDepartureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArrivalCitiesByDepartureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void DeleteCityCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void AddCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCustomersCompletedEventHandler(object sender, GetCustomersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCustomerFlightsCompletedEventHandler(object sender, GetCustomerFlightsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCustomerFlightsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCustomerFlightsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void UpdateCustomerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFlightsCitiesCompletedEventHandler(object sender, GetFlightsCitiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightsCitiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightsCitiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataTable Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataTable)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetFlightPriceCompletedEventHandler(object sender, GetFlightPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFlightPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFlightPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591